Here's a clear breakdown of your project into 10 structured subtasks (just backend/model, no UI), so you can assign each step to Copilot in VSCode and build cleanly:

1. Data Ingestion
Load train, validation, and test CSVs into your workspace/database.

Load and filter the metadata file to only needed products.

2. Database Setup
Design tables/collections for users, products, and interactions.

Store user histories and product details for fast lookup.

3. Data Preprocessing
Clean and normalize user histories and product IDs.

Map product IDs to metadata (title, description, etc.).

4. Exploratory Data Analysis (EDA)
Analyze user and product distributions.

Check for missing data, duplicates, and basic statistics.

5. Model Selection & Baseline
Choose a simple recommendation approach (e.g., item-to-item co-occurrence or popularity-based).

Implement a baseline recommender for quick testing.

6. Collaborative Filtering Model
Build a collaborative filtering model (user-based or item-based).

Train using the train split, validate on validation split.

7. Recommendation API Endpoint
Create a FastAPI endpoint that takes user ID or product ID and returns recommended product IDs.

Ensure it can handle new users (cold start) with fallback logic.

8. Metadata Enrichment
For each recommended product ID, fetch product details from metadata.

Prepare readable product info for explanations.

9. LLM Explanation Integration
Design prompt templates for LLM ("Explain why product X is recommended to user Y based on their history...").

Integrate LLM API (OpenAI, Gemini, etc.) to generate explanations for each recommendation.

10. Testing & Documentation
Test API responses for accuracy and clarity.

